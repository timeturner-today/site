/**
 * Transition a list of properties with the default animation. Usage:
 * @include default-animation(background-color, color);
 */
@mixin default-animation($props...) {
  @include animate(0.2s ease-in-out, $props...);
}

/**
 * Transition a list of properties with the animation specified in the
 * first parameter. Usage:
 * @include animate(0.2s ease-in-out, background-color, color);
 */
@mixin animate($transition, $props...) {

  // If we have not specified any properties, then transition all
  @if length($props) == 0 {
    @include transition(append(all, $transition));
  }

  // Otherwise, create transitions for the given properties
  @if length($props) > 0 {
    // Tell the browser that we'll be messing with these properties
    will-change: $props;

    // Create our transition string
    $result: ();
    @for $i from 1 through length($props) {
      $prop: nth($props, $i);
      $result: append($result, $prop);
      $result: append($result, $transition);
      @if $i != length($props) {
        $result: append($result, unquote($string: ","));
      }
    }

    @include transition($result);
  }
}

/**
 * Simple cross-browser transition mixin
 */
@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}
